// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TranscriptionsProcessor;

#nullable disable

namespace TranscriptionsProcessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeetingParticipant", b =>
                {
                    b.Property<string>("MeetingsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParticipantsParticipantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MeetingsId", "ParticipantsParticipantId");

                    b.HasIndex("ParticipantsParticipantId");

                    b.ToTable("MeetingParticipant");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.ActionItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Deadline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParticipantId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("ActionItems");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.IdempotencyKey", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MeetingId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Key");

                    b.HasIndex("MeetingId");

                    b.ToTable("IdempotencyKeys");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Meeting", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DestroyedTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fqn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meetings");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Participant", b =>
                {
                    b.Property<string>("ParticipantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsModerator")
                        .HasColumnType("bit");

                    b.Property<string>("JWTUserIdId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipantId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Summary", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Decisions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SummaryText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MeetingId")
                        .IsUnique();

                    b.ToTable("Summaries");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Transcription", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FinalText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParticipantId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ParticipantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .HasColumnType("bigint");

                    b.HasKey("MessageId");

                    b.HasIndex("MeetingId");

                    b.HasIndex("ParticipantId");

                    b.ToTable("Transcriptions");
                });

            modelBuilder.Entity("MeetingParticipant", b =>
                {
                    b.HasOne("TranscriptionsProcessor.Entities.Meeting", null)
                        .WithMany()
                        .HasForeignKey("MeetingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranscriptionsProcessor.Entities.Participant", null)
                        .WithMany()
                        .HasForeignKey("ParticipantsParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.ActionItem", b =>
                {
                    b.HasOne("TranscriptionsProcessor.Entities.Meeting", "Meeting")
                        .WithMany("ActionItems")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranscriptionsProcessor.Entities.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId");

                    b.Navigation("Meeting");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.IdempotencyKey", b =>
                {
                    b.HasOne("TranscriptionsProcessor.Entities.Meeting", "Meeting")
                        .WithMany()
                        .HasForeignKey("MeetingId");

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Summary", b =>
                {
                    b.HasOne("TranscriptionsProcessor.Entities.Meeting", "Meeting")
                        .WithOne("Summary")
                        .HasForeignKey("TranscriptionsProcessor.Entities.Summary", "MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Transcription", b =>
                {
                    b.HasOne("TranscriptionsProcessor.Entities.Meeting", "Meeting")
                        .WithMany("Transcriptions")
                        .HasForeignKey("MeetingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TranscriptionsProcessor.Entities.Participant", "Participant")
                        .WithMany()
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meeting");

                    b.Navigation("Participant");
                });

            modelBuilder.Entity("TranscriptionsProcessor.Entities.Meeting", b =>
                {
                    b.Navigation("ActionItems");

                    b.Navigation("Summary");

                    b.Navigation("Transcriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
